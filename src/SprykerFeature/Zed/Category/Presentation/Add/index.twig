{% extends '@Gui/Layout/layout.twig' %}

{% if widget_title is not defined %}
    {% set widget_title = 'Category Add' %}
{% endif %}

{% if submit_title is not defined %}
    {% set submit_title = 'Add' %}
{% endif %}

{% if idCategory is not defined %}
    {% set idCategory = 0 %}
{% endif %}

{% block head_title -%}
    {{ widget_title | trans }} {% if idCategory > 0 %} : {{ idCategory }} {% endif %}
{%- endblock %}
{% block section_title %}{{ widget_title }}{% endblock %}


{% block content %}

    {% embed '@Gui/Partials/widget.twig' %}

        {% block widget_content %}

            {{ form_start(form) }}
            {{ form_widget(form) }}

            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#tab-1">Select products to assign</a></li>
                    <li class=""><a data-toggle="tab" href="#tab-2">Products to be assigned</a></li>
                </ul>
                <div class="tab-content">
                    <div id="tab-1" class="tab-pane active">
                        <div class="panel-body">
                            {{ productsTable | raw }}

                            <div class="">
                                <a onclick="allProductsClickSelectAll();" href="javascript:void(0);" class="btn btn-primary ">Select All</a>
                            </div>
                        </div>
                    </div>
                    <div id="tab-2" class="tab-pane">
                        <div class="panel-body">
                            <h3>Selected products</h3>
                            <table class="table table-striped table-bordered table-hover " id="selectedProductsTable">
                                <thead>
                                <tr>
                                    <th>id_abstract_product</th>
                                    <th>SKU</th>
                                    <th>Name</th>
                                    <th>Selected</th>
                                </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>

                            <div class="">
                                <a onclick="fnClearSelection();" href="javascript:void(0);" class="btn btn-primary ">Clear
                                    Selected</a>
                            </div>

                            <div class="">
                                <a onclick="fnClearSelection();" href="javascript:void(0);" class="btn btn-primary ">Clear
                                    All</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <br/>
            <br/>

            <h3>Products in this category</h3>
            {{ productCategoriesTable | raw }}

            <input type="submit" class="btn btn-primary" value="{{ submit_title | trans }}"/>
            {{ form_end(form) }}

        {% endblock %}

    {% endembed %}

{% endblock %}

{% block head_css %}
    {{ parent() }}
{% endblock %}

{% block footer_js %}
    {{ parent() }}
    <script>
        function ProductSelector() {
            var productSelector = {};
            var selectedProducts = {};
            var idKey = 'id';

            productSelector.addProductToSelection = function (idProduct) {
                selectedProducts[idProduct] = idProduct;
            };

            productSelector.removeProductFromSelection = function (idProduct) {
                delete selectedProducts[idProduct];
            };

            productSelector.isProductSelected = function (idProduct) {
                return selectedProducts.hasOwnProperty(idProduct);
            };

            productSelector.clearAllSelections = function () {
                selectedProducts = {};
            };

            productSelector.addAllToSelection = function (data) {
                for (var i = 0; i < data.length; i++) {
                    var id = data[i][idKey];
                    selectedProducts[id] = id;
                }
            };

            productSelector.getSelected = function () {
                return selectedProducts;
            };

            return productSelector;
        }


        function TableHandler() {
            var allProductsTableHandler = {};
            var selectedProductsTable = $('#selectedProductsTable');
            var allProductsTable = $('#product-table');
            
            var selectedProductSelector = new ProductSelector();

            allProductsTableHandler.selectAll = function () {

                var nodes = allProductsTable.dataTable().fnGetNodes();
                //$('.selected_product', nodes).attr('checked', 'checked');
                $('input[type="checkbox"]', nodes).prop('checked', true);
                
                var allProductsData = allProductsTable.DataTable().rows().data();
                allProductsData.each(function (cellData, index) {
                    console.log('Data in index: ' + index + ' is: ', cellData);

                    allProductsTableHandler.addSelectedProduct(cellData[0], cellData[1], cellData[2]);
                });
            };

            allProductsTableHandler.addSelectedProduct = function (idProduct, sku, name) {
                if (selectedProductSelector.isProductSelected(idProduct)) {
                    return;
                }
                selectedProductSelector.addProductToSelection(idProduct);

                selectedProductsTable.dataTable().fnAddData([
                    idProduct,
                    decodeURIComponent((sku+'').replace(/\+/g, '%20')),
                    decodeURIComponent((name+'').replace(/\+/g, '%20')),
                    '<input type="checkbox" name="selected_product['+idProduct+']" />'
                ]);
            };

            allProductsTableHandler.removeSelectedProduct = function (idProduct, sku, name) {
                selectedProductSelector.removeProductFromSelection(idProduct);

                var selectedProductsData = selectedProductsTable.DataTable().rows().data();
                selectedProductsData.each(function (cellData, index) {
                    var currentId = cellData[0];
                    
                    if (currentId == idProduct) {
                        selectedProductsTable.dataTable().fnDeleteRow(index);
                    }
                });
            };

            return allProductsTableHandler;
        }

        var allProductsTableHandler = new TableHandler();
        

        function allProductsClickSelectAll() {
            allProductsTableHandler.selectAll();
        }

        function allProductsClickMarkAsSelected(checkbox, idProduct, sku, name) {
            if (checkbox.checked) {
                allProductsTableHandler.addSelectedProduct(idProduct, sku, name);
            }
            else {
                allProductsTableHandler.removeSelectedProduct(idProduct, sku, name);
            }
        }

        $(document).ready(function () {

/*            var table = $('#product-table').DataTable({
                'processing': true,
                'serverSide': true,
                'ajax': '/category/edit/productTable?id-category={{ idCategory }}'
            });*/

            $('#assignNewProductsTable tbody').on('click', 'tr', function () {
                console.log(table.row(this).data());
            });

            //parent
            $('.spryker-form-select2combobox').select2();

        });
    </script>
{% endblock %}
