{% extends '@Gui/Layout/layout.twig' %}

{% if widget_title is not defined %}
    {% set widget_title = 'Category Add' %}
{% endif %}

{% if submit_title is not defined %}
    {% set submit_title = 'Add' %}
{% endif %}

{% if idCategory is not defined %}
    {% set idCategory = 0 %}
{% endif %}

{% block head_title -%}
    {{ widget_title | trans }} {% if idCategory > 0 %} : {{ idCategory }} {% endif %}
{%- endblock %}
{% block section_title %}{{ widget_title }}{% endblock %}


{% block content %}

    {% embed '@Gui/Partials/widget.twig' %}

        {% block widget_content %}

            {{ form_start(form) }}
            {{ form_widget(form) }}

            {{ productCategories | raw }}

            <input type="submit" class="btn btn-primary" value="{{ submit_title | trans }}" />
            {{ form_end(form) }}

        {% endblock %}

    {% endembed %}

{% endblock %}

{% block head_css %}
    {{ parent() }}
{% endblock %}

{% block footer_js %}
    {{ parent() }}
    <script>
        $(document).ready(function() {
            //parent
            $('.spryker-form-select2combobox').select2();
            
            //category products
            $('#form_products').select2({
                ajax: {
                    url: "/category/edit/productCategorySuggestProduct?id-category={{ idCategory }}",
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term, // search term
                            page: params.page
                        };
                    },
                    processResults: function (data, page) {
                        console.log('shit', data.items);
                        // parse the results into the format expected by Select2.
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data
                        return {
                            results: data.items
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) {
                    return markup; // let our custom formatter work
                },
                minimumInputLength: 2,
                templateResult: function(product) {
                    if (product.loading) return product.text;
                    
                    var markup = 
                            '<div class="clearfix">' +
                                '<div class="col-sm-10">' +
                                '<div class="clearfix">' +
                                    '<div class="col-sm-7"><b class=""></b> ' + product.name + '</div>' +
                                    '<div class="col-sm-3"><i class=""></i> ' + product.sku + '</div>' +
                                '</div>'+
                            '<div>';

/*                    if (product.description) {
                        markup += '<div>' + product.description + '</div>';
                    }*/

                    return markup;
                },
                templateSelection: function(product) {
                    return product.name || product.sku;
                }
            });
        });
    </script>
{% endblock %}
